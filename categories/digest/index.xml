<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Digest on DataFibers</title>
    <link>https://datafibers-community.github.io/categories/digest/</link>
    <description>Recent content in Digest on DataFibers</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 May 2019 13:50:46 +0200</lastBuildDate>
    
	<atom:link href="https://datafibers-community.github.io/categories/digest/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Use Redish Lock for SecKill</title>
      <link>https://datafibers-community.github.io/blog/2019/05/20/2019-05-20-use-redis-lock-for-seckill/</link>
      <pubDate>Mon, 20 May 2019 13:50:46 +0200</pubDate>
      
      <guid>https://datafibers-community.github.io/blog/2019/05/20/2019-05-20-use-redis-lock-for-seckill/</guid>
      <description>What is Seckill? When associated with online shopping, &amp;ldquo;seckill&amp;rdquo; refers to the quick sell out of newly-advertised goods. If you look at the transaction record, you will find that each of the transactions is made in seconds. It sounds inconceivable but is the naked truth. This is called &amp;ldquo;seckill&amp;rdquo;.
A typical system for seckill has following features. * A large number of users will be shopping at the same time during the quick sell, and the web site traffic increses dramatically.</description>
    </item>
    
    <item>
      <title>Apache Kafka Consumers</title>
      <link>https://datafibers-community.github.io/blog/2018/08/04/2018-08-04-apache-kafka-consumers/</link>
      <pubDate>Sat, 04 Aug 2018 13:50:46 +0200</pubDate>
      
      <guid>https://datafibers-community.github.io/blog/2018/08/04/2018-08-04-apache-kafka-consumers/</guid>
      <description>Kafka consumer is what we use quite often to read data from Kafka. Here, we use this article to explain some key concepts and topics regarding to consumer architecture in Kafka.
Consumer Groups We can always group consumers into a consumer group by use case or function of the group. One consumer group might be responsible for delivering records to high-speed, in-memory microservices while another consumer group is streaming those same records to Hadoop.</description>
    </item>
    
    <item>
      <title>Naive Bayes Algorithm</title>
      <link>https://datafibers-community.github.io/blog/2018/03/10/2018-03-10-ml-naive-bayes/</link>
      <pubDate>Sat, 10 Mar 2018 13:50:46 +0200</pubDate>
      
      <guid>https://datafibers-community.github.io/blog/2018/03/10/2018-03-10-ml-naive-bayes/</guid>
      <description>Background It would be difficult and practically impossible to classify a web page, a document, an email or any other lengthy text notes manually. This is where Naïve Bayes Classifier machine learning algorithm comes to the rescue. A classifier is a function that allocates a population’s element value from one of the available categories. For instance, Spam Filtering is a popular application of Naïve Bayes algorithm. Spam filter here, is a classifier that assigns a label Spam or Not Spam to all the emails.</description>
    </item>
    
  </channel>
</rss>